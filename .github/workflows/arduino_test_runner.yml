---
name: Arduino_CI

on: [push, pull_request]

jobs:
  arduino_ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: Arduino-CI/action@v0.1.2   # v0.1.2 or the latest version
        env:
          # Not all libraries include examples or unit tests.  The default
          #  behavior of arduino_ci is to assume that "if the files don't
          #  exist, then they were not MEANT to exist".  In other words,
          #  if you were to accidentally delete all your tests or example
          #  sketches, then the CI runner would by default assume that was
          #  intended and return a passing result.
          #
          # If you'd rather have the test runner fail the test in the
          #  absence of either tests or examples, uncommenting either of
          #  the following lines (as appropriate) will enforce that.
          #
          EXPECT_EXAMPLES: false
          EXPECT_UNITTESTS: false

          # Scanning library.properties for issues is a relatively new
          #  feature, and we may not have implemented it perfectly just
          #  yet.
          #
          # If you find that it incorrectly fails your library, you can
          #  skip it.  (Please open an issue against arduino_ci as well
          #  so that it can be fixed.)
          #
          SKIP_LIBRARY_PROPERTIES: false

          # Not all libraries are in the root directory of a repository.
          # Specifying the path of the library here (relative to the root
          # of the repository) will adjust that.
          #
          # The default is the current directory
          #
          USE_SUBDIR: .

          # Although dependencies will be installed automatically via the
          # library manager, your library under test may require an
          # unofficial version of a dependency.  In those cases, the custom
          # libraries must be insalled prior to the test execution; those
          # installation commands should be placed in a shell script (that
          # will be executed by /bin/sh) and the shell script in your repo.
          #
          # Then, set this variable to the path to that file (relative to
          # the repository root)
          #
          # CUSTOM_INIT_SCRIPT: install_dependencies.sh
